/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, HostBinding, HostListener, Optional, ChangeDetectionStrategy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { Location } from '@angular/common';
import { Subscription } from 'rxjs';
import { lightboxAnimations } from './lightbox.animation';
var LightboxComponent = /** @class */ (function () {
    function LightboxComponent(sanitizer, location) {
        var _this = this;
        this.sanitizer = sanitizer;
        /**
         * Subscription to changes in the user's location.
         */
        this._locationChange$ = Subscription.EMPTY;
        // Close the Lightbox when the location changes
        if (location) {
            this._locationChange$ = location.subscribe(function () { return _this.overlayRef.detach(); });
        }
    }
    /** Dispose the overlay when exit animation is done */
    /**
     * Dispose the overlay when exit animation is done
     * @param {?} e
     * @return {?}
     */
    LightboxComponent.prototype.onMouseLeave = /**
     * Dispose the overlay when exit animation is done
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (e.toState === 'void') {
            this.overlayRef.dispose();
        }
    };
    /**
     * @return {?}
     */
    LightboxComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._locationChange$.unsubscribe();
    };
    LightboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lightbox',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [lightboxAnimations.slideLightbox],
                    styles: ["::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%;box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}::ng-deep .g-backdrop{background-color:rgba(0,0,0,.9)}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width:480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%}}::ng-deep .cdk-global-overlay-wrapper,::ng-deep .cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}::ng-deep .cdk-overlay-container{position:fixed;z-index:1000}::ng-deep .cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}::ng-deep .cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000}::ng-deep .cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.48}::ng-deep .cdk-overlay-dark-backdrop{background:rgba(0,0,0,.6)}::ng-deep .cdk-overlay-transparent-backdrop{background:0 0}::ng-deep .cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width:480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}"],
                    template: "\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\n    </gallery>\n  "
                },] },
    ];
    /** @nocollapse */
    LightboxComponent.ctorParameters = function () { return [
        { type: DomSanitizer },
        { type: Location, decorators: [{ type: Optional }] }
    ]; };
    LightboxComponent.propDecorators = {
        slideAnimation: [{ type: HostBinding, args: ['@slideLightbox',] }],
        onMouseLeave: [{ type: HostListener, args: ['@slideLightbox.done', ['$event'],] }]
    };
    return LightboxComponent;
}());
export { LightboxComponent };
if (false) {
    /**
     * Gallery ref id
     * @type {?}
     */
    LightboxComponent.prototype.id;
    /**
     * Overlay ref to close the lightbox
     * @type {?}
     */
    LightboxComponent.prototype.overlayRef;
    /**
     * close button svg data
     * @type {?}
     */
    LightboxComponent.prototype.closeIcon;
    /**
     * Subscription to changes in the user's location.
     * @type {?}
     */
    LightboxComponent.prototype._locationChange$;
    /**
     * Use slide animation on opening and closing the lightbox
     * @type {?}
     */
    LightboxComponent.prototype.slideAnimation;
    /** @type {?} */
    LightboxComponent.prototype.sanitizer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHRib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1nYWxsZXJ5L2xpZ2h0Ym94LyIsInNvdXJjZXMiOlsibGliL2xpZ2h0Ym94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBYSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQW9CLE1BQU0sTUFBTSxDQUFDO0FBRXRELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztJQXNDeEQsMkJBQW1CLFNBQXVCLEVBQWMsUUFBa0I7UUFBMUUsaUJBS0M7UUFMa0IsY0FBUyxHQUFULFNBQVMsQ0FBYzs7OztnQ0FaRyxZQUFZLENBQUMsS0FBSzs7UUFjN0QsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO1NBQzVFO0tBQ0Y7SUFaRCxzREFBc0Q7Ozs7OztJQUNMLHdDQUFZOzs7OztJQUE3RCxVQUE4RCxDQUFDO1FBQzdELElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7WUFDeEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMzQjtLQUNGOzs7O0lBU0QsdUNBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxDQUFDO0tBQ3JDOztnQkE3Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxVQUFVO29CQUNwQixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsVUFBVSxFQUFFLENBQUMsa0JBQWtCLENBQUMsYUFBYSxDQUFDO29CQUM5QyxNQUFNLEVBQUUsQ0FBQywweURBQTB5RCxDQUFDO29CQUNwekQsUUFBUSxFQUFFLG1RQUtUO2lCQUNGOzs7O2dCQWpCUSxZQUFZO2dCQUNaLFFBQVEsdUJBeUM4QixRQUFROzs7aUNBVHBELFdBQVcsU0FBQyxnQkFBZ0I7K0JBRzVCLFlBQVksU0FBQyxxQkFBcUIsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7NEJBckNqRDs7U0FtQmEsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBPcHRpb25hbCwgT25EZXN0cm95LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEb21TYW5pdGl6ZXIgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuaW1wb3J0IHsgTG9jYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24sIFN1YnNjcmlwdGlvbkxpa2UgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgT3ZlcmxheVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcclxuaW1wb3J0IHsgbGlnaHRib3hBbmltYXRpb25zIH0gZnJvbSAnLi9saWdodGJveC5hbmltYXRpb24nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWdodGJveCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgYW5pbWF0aW9uczogW2xpZ2h0Ym94QW5pbWF0aW9ucy5zbGlkZUxpZ2h0Ym94XSxcclxuICBzdHlsZXM6IFtgOjpuZy1kZWVwIGxpZ2h0Ym94e3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTEwMHB4O2hlaWdodDo4MDBweDttYXgtd2lkdGg6OTR2dzttYXgtaGVpZ2h0Ojkwdmh9OjpuZy1kZWVwIGxpZ2h0Ym94IGdhbGxlcnl7b3ZlcmZsb3c6aGlkZGVuO21hcmdpbjowO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3gtc2hhZG93OjAgMTFweCAxNXB4IC03cHggcmdiYSgwLDAsMCwuMiksMCAyNHB4IDM4cHggM3B4IHJnYmEoMCwwLDAsLjE0KSwwIDlweCA0NnB4IDhweCByZ2JhKDAsMCwwLC4xMil9OjpuZy1kZWVwIC5nLWJhY2tkcm9we2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuOSl9OjpuZy1kZWVwIC5mdWxsc2NyZWVue3dpZHRoOjEwMCV9OjpuZy1kZWVwIC5mdWxsc2NyZWVuIDo6bmctZGVlcCBsaWdodGJveHttYXgtd2lkdGg6dW5zZXQ7bWF4LWhlaWdodDp1bnNldDtwb3NpdGlvbjpmaXhlZDt0b3A6MDtsZWZ0OjA7Ym90dG9tOjA7cmlnaHQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlfTo6bmctZGVlcCAuZy1vdmVybGF5e21hcmdpbjphdXRvfUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0ODBweCl7OjpuZy1kZWVwIC5nLW92ZXJsYXl7d2lkdGg6MTAwJX06Om5nLWRlZXAgLmctb3ZlcmxheSA6Om5nLWRlZXAgbGlnaHRib3h7bWF4LXdpZHRoOnVuc2V0O21heC1oZWlnaHQ6dW5zZXQ7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO2JvdHRvbTowO3JpZ2h0OjA7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJX19OjpuZy1kZWVwIC5jZGstZ2xvYmFsLW92ZXJsYXktd3JhcHBlciw6Om5nLWRlZXAgLmNkay1vdmVybGF5LWNvbnRhaW5lcntwb2ludGVyLWV2ZW50czpub25lO3RvcDowO2xlZnQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlfTo6bmctZGVlcCAuY2RrLW92ZXJsYXktY29udGFpbmVye3Bvc2l0aW9uOmZpeGVkO3otaW5kZXg6MTAwMH06Om5nLWRlZXAgLmNkay1nbG9iYWwtb3ZlcmxheS13cmFwcGVye2Rpc3BsYXk6ZmxleDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjEwMDB9OjpuZy1kZWVwIC5jZGstb3ZlcmxheS1wYW5le3Bvc2l0aW9uOmFic29sdXRlO3BvaW50ZXItZXZlbnRzOmF1dG87Ym94LXNpemluZzpib3JkZXItYm94O3otaW5kZXg6MTAwMH06Om5nLWRlZXAgLmNkay1vdmVybGF5LWJhY2tkcm9we3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2JvdHRvbTowO2xlZnQ6MDtyaWdodDowO3otaW5kZXg6MTAwMDtwb2ludGVyLWV2ZW50czphdXRvOy13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudDt0cmFuc2l0aW9uOm9wYWNpdHkgLjRzIGN1YmljLWJlemllciguMjUsLjgsLjI1LDEpO29wYWNpdHk6MH06Om5nLWRlZXAgLmNkay1vdmVybGF5LWJhY2tkcm9wLmNkay1vdmVybGF5LWJhY2tkcm9wLXNob3dpbmd7b3BhY2l0eTouNDh9OjpuZy1kZWVwIC5jZGstb3ZlcmxheS1kYXJrLWJhY2tkcm9we2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuNil9OjpuZy1kZWVwIC5jZGstb3ZlcmxheS10cmFuc3BhcmVudC1iYWNrZHJvcHtiYWNrZ3JvdW5kOjAgMH06Om5nLWRlZXAgLmNkay1nbG9iYWwtc2Nyb2xsYmxvY2t7cG9zaXRpb246Zml4ZWQ7d2lkdGg6MTAwJTtvdmVyZmxvdy15OnNjcm9sbH06Om5nLWRlZXAgLmctYnRuLWNsb3Nle3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0Oi45ZW07dG9wOi45ZW07ei1pbmRleDo2MDtjdXJzb3I6cG9pbnRlcjt3aWR0aDoyMHB4O2hlaWdodDoyMHB4fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0ODBweCl7OjpuZy1kZWVwIC5nLWJ0bi1jbG9zZXtyaWdodDouN2VtO3RvcDouN2VtfX1gXSxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPGdhbGxlcnkgW2lkXT1cImlkXCIgW2Rlc3Ryb3lSZWZdPVwiZmFsc2VcIiBbc2tpcEluaXRDb25maWddPVwidHJ1ZVwiPlxyXG4gICAgICA8aSBjbGFzcz1cImctYnRuLWNsb3NlXCIgYXJpYS1sYWJlbD1cIkNsb3NlXCIgKGNsaWNrKT1cIm92ZXJsYXlSZWYuZGV0YWNoKClcIlxyXG4gICAgICAgICBbaW5uZXJIVE1MXT1cInNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0SHRtbChjbG9zZUljb24pXCI+PC9pPlxyXG4gICAgPC9nYWxsZXJ5PlxyXG4gIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIExpZ2h0Ym94Q29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcclxuXHJcbiAgLyoqIEdhbGxlcnkgcmVmIGlkICovXHJcbiAgaWQ6IHN0cmluZztcclxuXHJcbiAgLyoqIE92ZXJsYXkgcmVmIHRvIGNsb3NlIHRoZSBsaWdodGJveCAqL1xyXG4gIG92ZXJsYXlSZWY6IE92ZXJsYXlSZWY7XHJcblxyXG4gIC8qKiBjbG9zZSBidXR0b24gc3ZnIGRhdGEgKi9cclxuICBjbG9zZUljb246IHN0cmluZztcclxuXHJcbiAgLyoqIFN1YnNjcmlwdGlvbiB0byBjaGFuZ2VzIGluIHRoZSB1c2VyJ3MgbG9jYXRpb24uICovXHJcbiAgcHJpdmF0ZSBfbG9jYXRpb25DaGFuZ2UkOiBTdWJzY3JpcHRpb25MaWtlID0gU3Vic2NyaXB0aW9uLkVNUFRZO1xyXG5cclxuICAvKiogVXNlIHNsaWRlIGFuaW1hdGlvbiBvbiBvcGVuaW5nIGFuZCBjbG9zaW5nIHRoZSBsaWdodGJveCAqL1xyXG4gIEBIb3N0QmluZGluZygnQHNsaWRlTGlnaHRib3gnKSBzbGlkZUFuaW1hdGlvbjtcclxuXHJcbiAgLyoqIERpc3Bvc2UgdGhlIG92ZXJsYXkgd2hlbiBleGl0IGFuaW1hdGlvbiBpcyBkb25lICovXHJcbiAgQEhvc3RMaXN0ZW5lcignQHNsaWRlTGlnaHRib3guZG9uZScsIFsnJGV2ZW50J10pIG9uTW91c2VMZWF2ZShlKSB7XHJcbiAgICBpZiAoZS50b1N0YXRlID09PSAndm9pZCcpIHtcclxuICAgICAgdGhpcy5vdmVybGF5UmVmLmRpc3Bvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzYW5pdGl6ZXI6IERvbVNhbml0aXplciwgQE9wdGlvbmFsKCkgbG9jYXRpb246IExvY2F0aW9uKSB7XHJcbiAgICAvLyBDbG9zZSB0aGUgTGlnaHRib3ggd2hlbiB0aGUgbG9jYXRpb24gY2hhbmdlc1xyXG4gICAgaWYgKGxvY2F0aW9uKSB7XHJcbiAgICAgIHRoaXMuX2xvY2F0aW9uQ2hhbmdlJCA9IGxvY2F0aW9uLnN1YnNjcmliZSgoKSA9PiB0aGlzLm92ZXJsYXlSZWYuZGV0YWNoKCkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLl9sb2NhdGlvbkNoYW5nZSQudW5zdWJzY3JpYmUoKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==
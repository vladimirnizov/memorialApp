"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const testing_1 = require("@angular-devkit/schematics/testing");
const testing_2 = require("@ng-toolkit/_utils/testing");
const schematics_1 = require("@angular-devkit/schematics");
const collectionPath = path.join(__dirname, './collection.json');
describe('Serverless', () => {
    let appTree;
    const schematicRunner = new testing_1.SchematicTestRunner('@ng-toolkit/serverless', collectionPath);
    const defaultOptions = {
        project: 'foo',
        disableBugsnag: true,
        directory: '/foo'
    };
    const appOptions = {
        name: 'foo',
        version: '6.0.0',
    };
    beforeEach((done) => {
        appTree = new testing_1.UnitTestTree(schematics_1.Tree.empty());
        schematicRunner.runExternalSchematicAsync('@schematics/angular', 'ng-new', appOptions, appTree).subscribe(tree => {
            appTree = tree;
            done();
        });
    });
    xit('Should create files', (done) => {
        schematicRunner.runSchematicAsync('ng-add', defaultOptions, appTree).subscribe(tree => {
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/local.js`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/server.ts`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/src/app/app.browser.module.ts`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/src/app/app.server.module.ts`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/src/main.server.ts`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/src/tsconfig.server.json`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/webpack.server.config.js`);
            testing_2.checkIfFileExists(tree, `${defaultOptions.directory}/ng-toolkit.json`);
            done();
        });
    });
    it('do nothing', () => {
        console.log('nothing');
    });
    // it('Should throw exception if @angular/pwa not runned', (done) => {
    //     schematicRunner.runSchematicAsync('ng-add', defaultOptions, appTree).subscribe(tree => {
    //         const cliConfig = JSON.parse(getFileContent(tree, `${defaultOptions.directory}/angular.json`));
    //         console.log(cliConfig);
    //         done();
    //     });
    // })
});
//# sourceMappingURL=schematics_spec.js.map